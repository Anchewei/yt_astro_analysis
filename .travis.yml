language: python
sudo: false
cache:
  directories:
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853
    - $ROCKSTAR_DIR
    - $YT_DIR
    - $YT_DATA
    - $TEST_DIR
  pip: true

git:
  depth: 9999999

addons:
  apt:
    packages:
      - dvipng
      - libhdf5-serial-dev
      - libopenmpi-dev
      - openmpi-bin
      - texlive-latex-extra

env:
  global:
    GOLD_STANDARD=gold-standard-v4
    ROCKSTAR_DIR=$HOME/rockstar
    YT_DIR=$HOME/yt-git
    YT_DATA=$HOME/yt_test
    TEST_DIR=$HOME/test_results
    TEST_NAME=astro_analysis
    TEST_FLAGS="--nologcapture -v --with-answer-testing --local --local-dir $TEST_DIR --answer-name=$TEST_NAME --answer-big-data"

before_install:
  - |
    pip install --upgrade virtualenv
    python -m virtualenv venv
    source venv/bin/activate
    export PATH=/usr/lib/ccache:$PATH
    # configure yt
    mkdir -p $HOME/.config/yt
    echo "[yt]" > $HOME/.config/yt/ytrc
    echo "suppressStreamLogging = True" >> $HOME/.config/yt/ytrc
    echo "test_data_dir = $YT_DATA" >> $HOME/.config/yt/ytrc
    echo "loglevel = 30" >> $HOME/.config/yt/ytrc
    cat $HOME/.config/yt/ytrc

install:
  - |
    # setup environment
    ccache -s
    # Upgrade pip and setuptools and wheel to get clean install
    pip install --upgrade pip
    pip install --upgrade wheel
    pip install --upgrade setuptools
    # Install dependencies
    pip install cython mpi4py numpy
    # install yt
    if [ ! -f $YT_DIR/README.md ]; then
        git clone --branch=master https://github.com/yt-project/yt $YT_DIR
    fi
    pushd $YT_DIR
    git pull
    git checkout master
    pip install -e .
    popd
    if [ ! -f $ROCKSTAR_DIR/VERSION ]; then
      # install rockstar
      git clone https://github.com/yt-project/rockstar $ROCKSTAR_DIR
      pushd $ROCKSTAR_DIR
      make lib
      popd
    fi
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROCKSTAR_DIR
    echo $ROCKSTAR_DIR > rockstar.cfg

before_script:
  - |
    # download test data
    if [ ! -f $YT_DATA/enzo_tiny_cosmology/DD0046/DD0046 ]; then
        mkdir -p $YT_DATA
        girder-cli --api-url https://girder.hub.yt/api/v1 download 577c09480d7c6b0001ad5be2 $YT_DATA/enzo_tiny_cosmology
    fi

script:
  - |
    # generate test answers if not cached
    if [ ! -f $TEST_DIR/$TEST_NAME/$TEST_NAME ]; then
      git checkout $GOLD_STANDARD
      pip install -e .[dev]
      nosetests $TEST_FLAGS --answer-store
    fi
    git checkout HEAD
    pip install -e .[dev]
    nosetests $TEST_FLAGS

jobs:
  include:
    - stage: tests
      name: "tests with Python 2.7"
      python: 2.7

    - stage: tests
      name: "tests with Python 3.5"
      python: 3.5

    - stage: tests
      name: "tests with Python 3.6"
      python: 3.6
      after_success: codecov

    - stage: docs
      name: "docs build test"
      python: 3.6
      before_script: skip
      install:
        - |
          # setup environment
          ccache -s
          # Upgrade pip and setuptools and wheel to get clean install
          pip install --upgrade pip
          pip install --upgrade wheel
          pip install --upgrade setuptools
          # install yt_astro_analysis
          pip install -e .[dev]
      script:
        - |
          cd doc/source
          python -m sphinx -M html "." "_build" -W
